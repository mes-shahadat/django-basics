"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '39skx^4o++1wyln6hny*+zsqtkbimot@+m4w*q8-jp*)nepb$@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'registration',
    'blogpost',
    'payment',
    'sessioncookie',
    'djsignal',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myblog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Dhaka'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [BASE_DIR / 'static']

LOGIN_REDIRECT_URL = '/profile/'

LOGIN_URL = '/userlogin/'

#dummy console email backend
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

#message tag
from django.contrib.messages import constants as msg

MESSAGE_TAGS = { msg.ERROR: 'danger' }

#===========================================================================================================
#whole site caching

#this 3 middlewares are needed for whole site caching

# 'django.middleware.cache.UpdateCacheMiddleware',
# 'django.middleware.common.CommonMiddleware',
# 'django.middleware.cache.FetchFromCacheMiddleware',


#django caching backend (file based, local memory based, database based caching)

# CACHE_MIDDLEWARE_SECONDS = 30

# CACHES = {
#     'default':{
#         'BACKEND':'django.core.cache.backends.filebased.FileBasedCache',
#         'LOCATION':'/home/Desktop/cache/forcache2/cache',
#     }
# }

# CACHES = {
#     'default':{
#         'BACKEND':'django.core.cache.backends.locmem.LocMemCache',
#         'LOCATION':'anythingyouwant',
#     }
# }
#===========================================================================================================

#saves caches and sessions to database # note it is best to use redis for caching pages and sessions
CACHES = {
    'default':{
        'BACKEND':'django.core.cache.backends.db.DatabaseCache',
        'LOCATION':'myblog_cache',
    }
}

# session
# SESSION_COOKIE_AGE = 2000 # (default expiry time 2 weeks in seconds) using this global session cookie age can cause auto logout problem
SESSION_COOKIE_NAME = 'myblog.com' # by default cookie name shows sessionid in chrome cookie list
# SESSION_COOKIE_PATH = '/home' # default is /. It is usefull if you have multiple django instance, caution: using it without real use will cause cookie to get default empty value, and other error related to csrf token like authentication, which can cause data not saving in models
# SESSION_COOKIE_HTTPONLY = False #by default is true which is good, saves from javascript session hacking
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True
# SESSION_SAVE_EVERY_REQUEST = True #by default modified in refresh is false
# SESSION_COOKIE_SECURE = True (need https connections to work)
# SESSION_ENGINE = 'django.contrib.sessions.backends.file' (for file base sessions)